rnorm_bm <- function(n) {
u1 <- runif(n) # U(0,1)
u2 <- runif(n) # U(0,1)
r  <- sqrt(-2 * log(u1))
z1 <- r * cos(2 * pi * u2) # first
z2 <- r * sin(2 * pi * u2) # second
c(z1, z2)
}
set.seed(2024)
n  <- 1e5
X  <- rnorm_bm(n)
# Part B
dens <- density(X)
plot(dens, main = "Empirical density vs.  φ(x)",
xlab = "x", ylab = "density", lwd = 2)
curve(dnorm, from = -4, to = 4, add = TRUE,
lwd = 2, lty = 2)
legend("topright", c("kernel density", "φ(x)"),
lwd = 2, lty = c(1, 2))
ks <- ks.test(X, "pnorm")
ks$statistic
ks$p.value
polar_norm <- function(n, seed = NULL) {
if (!is.null(seed)) set.seed(seed)
# 2·n uniforms up front
u1 <- runif(n, -1, 1)
u2 <- runif(n, -1, 1)
s  <- u1^2 + u2^2
ok <- which(s > 0 & s < 1) # acceptance condition --> circle
# Transform accepted pairs
factor  <- sqrt(-2 * log(s[ok]) / s[ok])
z1      <- u1[ok] * factor
z2      <- u2[ok] * factor
Z       <- c(z1, z2)
attr(Z, "pairs_used")      <- n
attr(Z, "pairs_accepted")  <- length(ok)
Z
}
n_pairs <- 1e5
Z <- polar_norm(n_pairs, seed = 2024)
# Part B
dens <- density(Z)
plot(dens, main = "Polar method: empirical density vs. ϕ(x)",
xlab = "z", ylab = "density", lwd = 2)
curve(dnorm, from = -4, to = 4, add = TRUE,
lwd = 2, lty = 2)
legend("topright", c("kernel density", "ϕ(x)"), lwd = 2, lty = c(1, 2))
# Part C
ks <- ks.test(Z, "pnorm")
ks$statistic
ks$p.value
# Part D
N_generated   <- length(Z)
pairs_accept  <- attr(Z, "pairs_accepted")
acc_prob_emp  <- pairs_accept / n_pairs
cat("Pairs accepted :", pairs_accept, "\n")
cat("Normals obtained:", N_generated, "\n")
cat("Empirical acceptance probability :", round(acc_prob_emp, 4), "\n")
cat("Theoretical acceptance probability:", round(pi/4, 4), "\n")
